/*
 * JBoss, Home of Professional Open Source.
 * Copyright 2009, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
package org.infinispan.largeobjectsupport;

import java.util.UUID;

import org.infinispan.affinity.KeyGenerator;

/**
 * <p>
 * A {@link KeyGenerator <code>KeyGenerator</code>} implementation based on {@link java.util.UUID
 * <code>java.util.UUID</code>}. Each generated key will be prefixed by a configurable
 * <code>keyPrefix</code>.
 * </p>
 * <p>
 * Note that the uniqueness guarantees for keys generated by this <code>KeyGenerator</code> are
 * obviously as strong as those for <code>UUIDs</code>. In practice these should probably be
 * sufficient.
 * </p>
 * 
 * @author <a href="mailto:olaf.bergner@gmx.de">Olaf Bergner</a>
 * @since 5.1
 */
public class PrefixingUuidBasedKeyGenerator implements KeyGenerator<String> {

   private final String keyPrefix;

   /**
    * Create a new PrefixingUuidBasedKeyGenerator.
    * 
    * @param keyPrefix
    *           The prefix to prepend to all generated keys
    */
   public PrefixingUuidBasedKeyGenerator(String keyPrefix) {
      this.keyPrefix = keyPrefix;
   }

   @Override
   public String getKey() {
      return keyPrefix + UUID.randomUUID().toString();
   }
}
